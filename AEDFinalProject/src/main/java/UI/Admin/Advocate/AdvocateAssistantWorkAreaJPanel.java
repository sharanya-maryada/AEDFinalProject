/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Admin.Advocate;


import Backend.Connection.Connection;
import Backend.EcoSystem;
import Backend.Enterprise.Enterprise;
import Backend.Organization.AdvocateOrganization;
import Backend.Organization.Organization;
import Backend.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ms
 */
public class AdvocateAssistantWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private AdvocateOrganization organization;
    private Enterprise enterprise;
    
    /**
     * Creates new form CoordinatorAssistantWorkAreaJPanel
     */
    
    public AdvocateAssistantWorkAreaJPanel( JPanel userProcessContainer, UserAccount userAccount, Organization organization, EcoSystem business, Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.organization = (AdvocateOrganization)organization;
        this.enterprise = enterprise ;
        
        populateTable();
    }
    
    public void populateTable(){
          DefaultTableModel model = (DefaultTableModel)AdvocateJTable.getModel();
        
          model.setRowCount(0);
        
        for(Connection connection : organization.getConnectionDirectory().getConnectionList()){

         if ( connection.getAdvocateStatus().equals("Requested to Advocate") || connection.getAdvocateAssigned().getUsername().equals( userAccount.getUsername()) )
  { 

            Object[] row = new Object[5];
            row[0] = connection.getDonorRequest().getUser().getName();
            row[1] = connection;
            row[2] = connection.getReceiverRequest().getUser().getName();
            if (connection.getAdvocateStatus().equals("Requested to Advocate"))  {
                row[3] =  "unassinged";
            }
            else {
             row[3] = connection.getAdvocateAssigned().getUsername();
            }
            row[4] = connection.getAdvocateStatus();    
             
                model.addRow(row);
            
            }
      }
        
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        processJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AdvocateJTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        assignJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 100, -1));

        AdvocateJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Donor Name", "Organ", "Receiver Name", "Doctor Treating", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AdvocateJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 960, 110));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Manage Requests");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, -1));

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 120, -1));
    }// </editor-fold>//GEN-END:initComponents
//        int selectedRow = workRequestJTable.getSelectedRow();
//        
//        if (selectedRow < 0){
//            return;
//        }
    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        
         
   int selectedRow = AdvocateJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to Process" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
          if (AdvocateJTable.getValueAt(selectedRow, 4).equals("Completed") || AdvocateJTable.getValueAt(selectedRow, 4).equals("Rejected")) {
            JOptionPane.showMessageDialog(null, "Request is either Completed or Rejected " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (AdvocateJTable.getValueAt(selectedRow, 3) == "unassinged") {
            JOptionPane.showMessageDialog(null, "Please assign the request to yourself and then proceed" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Connection connection = (Connection)AdvocateJTable.getValueAt(selectedRow, 1);
        
        
        //DocumentsJPanel request = (AdvocateDocumentsJPanel)workRequestJTable.getValueAt(selectedRow, 2);
       AdvocateDocumentsJPanel advocateJpanel = new AdvocateDocumentsJPanel( userProcessContainer,userAccount,  organization,  business,  enterprise,connection);
        userProcessContainer.add("DocumentsJPanel",advocateJpanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
//       AdvocateDocumentsJPanel advocateJpanel = new AdvocateDocumentsJPanel(connection1,userProcessContainer, userAccount, coordinator, business ,enterprise);
//        userProcessContainer.add("DocumentsJPanel",advocateJpanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        layout.next(userProcessContainer);
//        
          
        
    }//GEN-LAST:event_processJButtonActionPerformed
      int xx,xy; 
    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
          int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);  
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
           xx = evt.getX();
          xy = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
        // TODO add your handling code here:
          int selectedRow = AdvocateJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row to Process" ,"Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (AdvocateJTable.getValueAt(selectedRow, 4).equals("Completed") || AdvocateJTable.getValueAt(selectedRow, 4).equals("Rejected") ) {
            JOptionPane.showMessageDialog(null, "Request is either Completed or Rejected " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (AdvocateJTable.getValueAt(selectedRow, 3) != "unassinged") {
            JOptionPane.showMessageDialog(null, "Request is already assigned " ,"Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }

        Connection connection = (Connection)AdvocateJTable.getValueAt(selectedRow, 1);
        connection.setAdvocateAssigned(userAccount);
        connection.setAdvocateStatus("With Advocate");
        connection.getReceiverRequest().setOverallStatus("Request with Advocate " + userAccount.getUsername());
        connection.getDonorRequest().setOverallStatus("Request with Advocate " + userAccount.getUsername());
        connection.getReceiverRequest().setActionDate(new Date());
        connection.getDonorRequest().setActionDate(new Date());
        JOptionPane.showMessageDialog(null, "Request assigned " ,"Info" , JOptionPane.INFORMATION_MESSAGE);
        populateTable();
    }//GEN-LAST:event_assignJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AdvocateJTable;
    private javax.swing.JButton assignJButton;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    // End of variables declaration//GEN-END:variables
}
