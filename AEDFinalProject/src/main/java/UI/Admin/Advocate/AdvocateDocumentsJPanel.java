/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Admin.Advocate;

import Backend.Connection.Connection;
import Backend.EcoSystem;
import Backend.Enterprise.Enterprise;
import static Backend.Enterprise.Enterprise.EnterpriseType.OrganBank;
import Backend.Network.Network;
import Backend.Organization.AdvocateOrganization;
import Backend.Organization.DoctorOrganization;
import Backend.Organization.Organization;
import Backend.UserAccount.UserAccount;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ms
 */
public class AdvocateDocumentsJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private AdvocateOrganization coordinator;
    private Enterprise enterprise;
    private Connection connection;
    int flag =0; 
    /**
     * Creates new form ManageUsersJPanel
     */
    public AdvocateDocumentsJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business, Enterprise enterprise,Connection connection) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.connection = connection;
        this.coordinator = (AdvocateOrganization)organization;
        this.enterprise = enterprise ;
        advocateName.setText(userAccount.getEmployee().getName());
        donorName.setText(connection.getDonorRequest().getUser().getName());
        receiverName.setText(connection.getReceiverRequest().getUser().getName());
        ApproveButton.setEnabled(false);
        rejectSign.setEnabled(false);
              
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        getDocButton = new javax.swing.JButton();
        donorSign = new javax.swing.JButton();
        tLabel = new javax.swing.JLabel();
        receiverSign = new javax.swing.JButton();
        advocateSign = new javax.swing.JButton();
        rejectSign = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        donorName = new javax.swing.JTextField();
        nameSeparator = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        receiverName = new javax.swing.JTextField();
        nameSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        advocateName = new javax.swing.JTextField();
        nameSeparator2 = new javax.swing.JSeparator();
        ApproveButton = new javax.swing.JButton();
        notClearSignature = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));

        getDocButton.setText("Get Document");
        getDocButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getDocButtonActionPerformed(evt);
            }
        });

        donorSign.setText("Donor");
        donorSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donorSignActionPerformed(evt);
            }
        });

        receiverSign.setText("Receiver");
        receiverSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiverSignActionPerformed(evt);
            }
        });

        advocateSign.setText("Clear");
        advocateSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advocateSignActionPerformed(evt);
            }
        });

        rejectSign.setText("Reject");
        rejectSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectSignActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Document Signatures");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("Donor Name");

        donorName.setBorder(null);
        donorName.setCaretColor(new java.awt.Color(30, 59, 92));
        donorName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                donorNameFocusGained(evt);
            }
        });
        donorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donorNameActionPerformed(evt);
            }
        });

        nameSeparator.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setText("Receiver Name");

        receiverName.setBorder(null);
        receiverName.setCaretColor(new java.awt.Color(30, 59, 92));
        receiverName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                receiverNameFocusGained(evt);
            }
        });
        receiverName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiverNameActionPerformed(evt);
            }
        });

        nameSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel3.setText("Advocate Name");

        advocateName.setBorder(null);
        advocateName.setCaretColor(new java.awt.Color(30, 59, 92));
        advocateName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                advocateNameFocusGained(evt);
            }
        });
        advocateName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advocateNameActionPerformed(evt);
            }
        });

        nameSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        ApproveButton.setText("Approve");
        ApproveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveButtonActionPerformed(evt);
            }
        });

        notClearSignature.setText("Not Clear");
        notClearSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notClearSignatureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(donorName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(receiverName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(donorSign, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(getDocButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiverSign, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(rejectSign, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(advocateName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameSeparator2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(ApproveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(advocateSign, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(notClearSignature, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                .addComponent(tLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(getDocButton)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(donorName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(nameSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(donorSign)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)
                        .addComponent(receiverName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(nameSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(receiverSign)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(3, 3, 3)
                        .addComponent(advocateName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(nameSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(advocateSign)
                            .addComponent(notClearSignature))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(ApproveButton)
                        .addGap(18, 18, 18)
                        .addComponent(rejectSign)
                        .addGap(36, 36, 36))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void getDocButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDocButtonActionPerformed

       // ImageIcon image = new ImageIcon(getClass().getResource("/Images/organ_Agreement.jpg"));
        flag++;
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File("organ_Agreement.jpg"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img.getScaledInstance(tLabel.getWidth(), tLabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(dimg);
        tLabel.setIcon(imageIcon);
    }//GEN-LAST:event_getDocButtonActionPerformed

    private void donorSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donorSignActionPerformed
        // TODO add your handling code here:
        //tLabel.removeAll();
        flag++;
         BufferedImage img1 = null;
        try {
            img1 = ImageIO.read(new File("organ_Agreement_Donor.jpg"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img1.getScaledInstance(tLabel.getWidth(), tLabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(dimg);
        tLabel.setIcon(imageIcon);
    }//GEN-LAST:event_donorSignActionPerformed

    private void receiverSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiverSignActionPerformed
        // TODO add your handling code here:
        flag++;
          BufferedImage img1 = null;
        try {
            img1 = ImageIO.read(new File("organ_Agreement_DonorReceiver.jpg"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img1.getScaledInstance(tLabel.getWidth(), tLabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(dimg);
        tLabel.setIcon(imageIcon);
    }//GEN-LAST:event_receiverSignActionPerformed

    private void advocateSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advocateSignActionPerformed
        // TODO add your handling code here:
        flag++;
        if(flag==4){
            ApproveButton.setEnabled(true);
        }
        else{
            rejectSign.setEnabled(false);
        }
          BufferedImage img1 = null;
        try {
            img1 = ImageIO.read(new File("organ_Agreement_DonorReceiverAdvocate.jpg"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img1.getScaledInstance(tLabel.getWidth(), tLabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(dimg);
        tLabel.setIcon(imageIcon);
    }//GEN-LAST:event_advocateSignActionPerformed

    private void rejectSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectSignActionPerformed
        // TODO add your handling code here:
        
          BufferedImage img1 = null;
        try {
            img1 = ImageIO.read(new File("organ_Agreement_Rejected.jpg"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img1.getScaledInstance(tLabel.getWidth(), tLabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon imageIcon = new ImageIcon(dimg);
        tLabel.setIcon(imageIcon);
        
            connection.setAdvocateStatus("Completed");
            connection.getReceiverRequest().setOverallStatus("Rejected by Advocate.");
            connection.getDonorRequest().setOverallStatus("Rejected by Advocate." );
            connection.setInventoryStatus("Rejected by Advocate.");
            JOptionPane.showMessageDialog(null, "Rejected  Successfully");
    }//GEN-LAST:event_rejectSignActionPerformed

    private void donorNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_donorNameFocusGained
        // TODO add your handling code here:
        donorName.setText("");
    }//GEN-LAST:event_donorNameFocusGained

    private void donorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_donorNameActionPerformed

    private void receiverNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_receiverNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_receiverNameFocusGained

    private void receiverNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiverNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receiverNameActionPerformed

    private void advocateNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_advocateNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_advocateNameFocusGained

    private void advocateNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advocateNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_advocateNameActionPerformed

    private void ApproveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveButtonActionPerformed
        // TODO add your handling code here:
        ApproveButton.setEnabled(false);
        
         Enterprise organEnt = null;
        for (Network network : business.getNetworkList()) {
            for (Enterprise allenterprise : network.getEnterpriseDirectory().getEnterpriseList()) {

                if (allenterprise.getEnterpriseType().equals(OrganBank)) {
                    organEnt = allenterprise;
                    break;
                }
            }

        }

        Organization org = null;
        for (Organization organization : organEnt.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof DoctorOrganization) {
                org = organization;
                break;
            }
        }
        
        
            if (org != null) {
            
            org.getConnectionDirectory().getConnectionList().add(connection);
            connection.setAdvocateStatus("Completed");
            connection.setDoctorStatus("Requested to Doctor");
            connection.getReceiverRequest().setOverallStatus("Approved by Advocate, Now will be taken care by Doctor");
            connection.getDonorRequest().setOverallStatus("Approved by Advocate, Now will be taken care by Doctor " );
            connection.setInventoryStatus("Approved By Advocate, Now will be taken cre by Doctor");
            JOptionPane.showMessageDialog(null, "Request Sent Successfully");
            } else {
            
                JOptionPane.showMessageDialog(null, "Doctor organization not present", "Error", JOptionPane.ERROR_MESSAGE);
            
            }
    }//GEN-LAST:event_ApproveButtonActionPerformed

    private void notClearSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notClearSignatureActionPerformed
        // TODO add your handling code here:
        rejectSign.setEnabled(true);
    }//GEN-LAST:event_notClearSignatureActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ApproveButton;
    private javax.swing.JTextField advocateName;
    private javax.swing.JButton advocateSign;
    private javax.swing.JTextField donorName;
    private javax.swing.JButton donorSign;
    private javax.swing.JButton getDocButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator nameSeparator;
    private javax.swing.JSeparator nameSeparator1;
    private javax.swing.JSeparator nameSeparator2;
    private javax.swing.JButton notClearSignature;
    private javax.swing.JTextField receiverName;
    private javax.swing.JButton receiverSign;
    private javax.swing.JButton rejectSign;
    private javax.swing.JLabel tLabel;
    // End of variables declaration//GEN-END:variables
}
