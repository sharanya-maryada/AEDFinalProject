/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Admin.InventoryManager;

import Backend.EcoSystem;
import Backend.User.User;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
//import org.jfree.chart.ChartFactory;
//import org.jfree.chart.ChartPanel;
//import org.jfree.chart.JFreeChart;
//import org.jfree.chart.plot.PiePlot;
//import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author ms
 */
public class Charts extends javax.swing.JPanel {

    /**
     * Creates new form ManageUsersJPanel
     */
    private EcoSystem system;
    private User user;

    public Charts(EcoSystem system) {
        initComponents();
        this.system = system;
        this.user = user;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        getOrgans = new javax.swing.JButton();
        chartPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        getGender = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        getreceivertodonor = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Charts");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 15, Short.MAX_VALUE))
        );

        getOrgans.setText("chart");
        getOrgans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOrgansActionPerformed(evt);
            }
        });

        chartPanel.setBackground(new java.awt.Color(153, 153, 153));
        chartPanel.setPreferredSize(new java.awt.Dimension(450, 500));

        javax.swing.GroupLayout chartPanelLayout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(55, 96, 128));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Get Piechart for all the available organs");

        jLabel2.setBackground(new java.awt.Color(55, 96, 128));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Get Piechart for all the Gender");

        getGender.setText("chart");
        getGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getGenderActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(55, 96, 128));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Get chart for no of receivers to donors");

        getreceivertodonor.setText("chart");
        getreceivertodonor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getreceivertodonorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, Short.MAX_VALUE)
                        .addComponent(getOrgans, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(getGender, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(getreceivertodonor, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(getOrgans)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(getGender)
                        .addGap(95, 95, 95)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(getreceivertodonor))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(chartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void getOrgansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getOrgansActionPerformed
        // TODO add your handling code here:
        int heart = 0;
        int eyes = 0;
        int kidney = 0;
        int lungs = 0;
        int liver = 0;

        for (User user : system.getUserDirectory().getUserDirectory()) {
            if (user.isHeart() == true) {
                heart++;
            }
            if (user.isLiver() == true) {
                liver++;
            }
            if (user.isEyes() == true) {
                eyes++;
            }
            if (user.isKidney() == true) {
                kidney++;
            }
            if (user.isLungs() == true) {
                lungs++;
            }
        }
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Heart", heart);
        pieDataset.setValue("Eyes", eyes);
        pieDataset.setValue("Kidney", eyes);
        pieDataset.setValue("Lungs", kidney);
        pieDataset.setValue("Liver", liver);
        JFreeChart chart = ChartFactory.createPieChart("Pie chart", pieDataset, true, true, true);
        PiePlot P = (PiePlot) chart.getPlot();
        //P.setForegroundAlpha(TOP_ALIGNMENT);
        ChartPanel panel = new ChartPanel(chart);
        chartPanel.add(panel);
        panel.setVisible(true);
        panel.setSize(450, 500);

    }//GEN-LAST:event_getOrgansActionPerformed

    private void getGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getGenderActionPerformed
        // TODO add your handling code here:
        int female = 0;
        int male = 0;
       

        for (User user : system.getUserDirectory().getUserDirectory()) {
            if (user.getGender().equalsIgnoreCase("Male")) {
                male++;
            }
         if (user.getGender().equalsIgnoreCase("Female")) {
                female++;
            }
        }
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("Males", male);
        pieDataset.setValue("Females", female);
        JFreeChart chart = ChartFactory.createPieChart("Pie chart", pieDataset, true, true, true);
        PiePlot P = (PiePlot) chart.getPlot();
        ChartPanel panel = new ChartPanel(chart);
        chartPanel.add(panel);
        panel.setVisible(true);
        panel.setSize(450, 500);
    }//GEN-LAST:event_getGenderActionPerformed

    private void getreceivertodonorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getreceivertodonorActionPerformed
        // TODO add your handling code here:
        int receiver = 0;
        int donor = 0;
       

        for (User user : system.getUserDirectory().getUserDirectory()) {
            if (user.getType() == 'd') {
                donor++;
            }
          if (user.getType() == 'r') {
                receiver++;
            }
        }      
        DefaultCategoryDataset pieDataset = new DefaultCategoryDataset();
        final String donor1 = "Donor";     
        final String receiver1 = "Receiver";  
        final String type = "Type";        
         pieDataset.addValue( donor , donor1 , type );     
         pieDataset.addValue( receiver , receiver1 , type );     
        JFreeChart barChart = ChartFactory.createBarChart(
         "Donors to Receiver Ratio", 
         "Category", "Score", 
         pieDataset,PlotOrientation.VERTICAL, 
         true, true, false);
        //P.setForegroundAlpha(TOP_ALIGNMENT);
        ChartPanel panel = new ChartPanel(barChart);
        chartPanel.add(panel);
        panel.setVisible(true);
        panel.setSize(450, 500);
    }//GEN-LAST:event_getreceivertodonorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartPanel;
    private javax.swing.JButton getGender;
    private javax.swing.JButton getOrgans;
    private javax.swing.JButton getreceivertodonor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

}
